user abc abc;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
  worker_connections  1024;
}

http {
  include    mime.types;
  dav_ext_lock_zone zone=foo:10m;
  
  send_timeout 3600;
  client_body_timeout 3600;
  keepalive_timeout 3600;
  lingering_timeout 3600;
  client_max_body_size 10G;
  
  server {
    server_name localhost;
    listen 80;
    root /data;

    if ($request_method = MKCOL) {
      rewrite ^(.*[^/])$ $1/ break;
    }

    if (-d $request_filename) {
      rewrite ^(.*[^/])$ $1/ break;
    }

    location ~ \.(_.*|DS_Store|Spotlight-V100|TemporaryItems|Trashes|hidden|localized)$ {
      access_log  off;
      error_log   off;
      if ($request_method = PUT) {
        return 403;
      }
      return 404;
    }

    location ~ \.metadata_never_index$ {
      return 200 "Don't index this drive, Finder!";
    }

    location / {
      auth_basic "Restricted";
    	auth_basic_user_file htpasswd;

      dav_methods PUT DELETE MKCOL COPY MOVE;
      dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;
      dav_ext_lock zone=foo;
      create_full_put_path on;

      fancyindex on;
      fancyindex_exact_size off;
      fancyindex_localtime on;
      fancyindex_name_length 255;

      # CORS, from https://github.com/fraoustin/webdav
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, PUT, OPTIONS, MOVE, DELETE, COPY, LOCK, UNLOCK' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Accept-Charset,X-Accept,origin,accept,if-match,destination,overwrite' always;
      add_header 'Access-Control-Expose-Headers' 'ETag' always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      if ($request_method = 'OPTIONS') {
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, PUT, OPTIONS, MOVE, DELETE, COPY, LOCK, UNLOCK';
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Accept-Charset,X-Accept,origin,accept,if-match,destination,overwrite';
        add_header 'Access-Control-Expose-Headers' 'ETag';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'DAV' '1,2'
        return 200;
      }


      set $destination $http_destination;
      set $parse "";

      if ($request_method = MOVE) {
        set $parse "${parse}M";
      }

      if ($request_method = COPY) {
        set $parse "${parse}M";
      }

      if (-d $request_filename) {
        rewrite ^(.*[^/])$ $1/ break;
        set $parse "${parse}D";
      }

      if ($destination ~ ^https?://.*/(.*)$) {
        set $ob $1;
        set $parse "${parse}R${ob}";
      }

      if ($parse ~ ^MDR(.*[^/])$) {
        set $mvpath $1;
        set $destination "https?://.*/${mvpath}/";
        more_set_input_headers "Destination: $destination";
      }
    }
  }
}
